### Generated by rprotoc. DO NOT EDIT!
### <proto file: protobuf\networkbasetypes.proto>
# 
# package google.protobuf;
# enum SIGNONSTATE {
# 	SIGNONSTATE_NONE = 0;
# 	SIGNONSTATE_CHALLENGE = 1;
# 	SIGNONSTATE_CONNECTED = 2;
# 	SIGNONSTATE_NEW = 3;
# 	SIGNONSTATE_PRESPAWN = 4;
# 	SIGNONSTATE_SPAWN = 5;
# 	SIGNONSTATE_FULL = 6;
# 	SIGNONSTATE_CHANGELEVEL = 7;
# }
# 
# message CMsgVector {
# 	optional float x = 1;
# 	optional float y = 2;
# 	optional float z = 3;
# }
# 
# message CMsgVector2D {
# 	optional float x = 1;
# 	optional float y = 2;
# }
# 
# message CMsgQAngle {
# 	optional float x = 1;
# 	optional float y = 2;
# 	optional float z = 3;
# }
# 
# message CSVCMsg_GameEvent {
# 	message key_t {
# 		optional int32 type = 1;
# 		optional string val_string = 2;
# 		optional float val_float = 3;
# 		optional int32 val_long = 4;
# 		optional int32 val_short = 5;
# 		optional int32 val_byte = 6;
# 		optional bool val_bool = 7;
# 		optional uint64 val_uint64 = 8;
# 	}
# 
# 	optional string event_name = 1;
# 	optional int32 eventid = 2;
# 	repeated CSVCMsg_GameEvent.key_t keys = 3;
# }
# 
# message CSVCMsgList_GameEvents {
# 	message event_t {
# 		optional int32 tick = 1;
# 		optional CSVCMsg_GameEvent event = 2;
# 	}
# 
# 	repeated CSVCMsgList_GameEvents.event_t events = 1;
# }
# 
# message CSVCMsg_UserMessage {
# 	optional int32 msg_type = 1;
# 	optional bytes msg_data = 2;
# }
# 
# message CSVCMsgList_UserMessages {
# 	message usermsg_t {
# 		optional int32 tick = 1;
# 		optional CSVCMsg_UserMessage msg = 2;
# 	}
# 
# 	repeated CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
# }
# 

require_relative 'protobuf/message/message'
require_relative 'protobuf/message/enum'
require_relative 'protobuf/message/service'
require_relative 'protobuf/message/extend'

module D2Parser
  module Proto
    class SIGNONSTATE < ::Protobuf::Enum
      defined_in __FILE__
      SIGNONSTATE_NONE = value(:SIGNONSTATE_NONE, 0)
      SIGNONSTATE_CHALLENGE = value(:SIGNONSTATE_CHALLENGE, 1)
      SIGNONSTATE_CONNECTED = value(:SIGNONSTATE_CONNECTED, 2)
      SIGNONSTATE_NEW = value(:SIGNONSTATE_NEW, 3)
      SIGNONSTATE_PRESPAWN = value(:SIGNONSTATE_PRESPAWN, 4)
      SIGNONSTATE_SPAWN = value(:SIGNONSTATE_SPAWN, 5)
      SIGNONSTATE_FULL = value(:SIGNONSTATE_FULL, 6)
      SIGNONSTATE_CHANGELEVEL = value(:SIGNONSTATE_CHANGELEVEL, 7)
    end
    class CMsgVector < ::Protobuf::Message
      defined_in __FILE__
      optional :float, :x, 1
      optional :float, :y, 2
      optional :float, :z, 3
    end
    class CMsgVector2D < ::Protobuf::Message
      defined_in __FILE__
      optional :float, :x, 1
      optional :float, :y, 2
    end
    class CMsgQAngle < ::Protobuf::Message
      defined_in __FILE__
      optional :float, :x, 1
      optional :float, :y, 2
      optional :float, :z, 3
    end
    class CSVCMsg_GameEvent < ::Protobuf::Message
      defined_in __FILE__
      class Key_t < ::Protobuf::Message
        defined_in __FILE__
        optional :int32, :type, 1
        optional :string, :val_string, 2
        optional :float, :val_float, 3
        optional :int32, :val_long, 4
        optional :int32, :val_short, 5
        optional :int32, :val_byte, 6
        optional :bool, :val_bool, 7
        optional :uint64, :val_uint64, 8
      end
      optional :string, :event_name, 1
      optional :int32, :eventid, 2
      repeated :'CSVCMsg_GameEvent::key_t', :keys, 3
    end
    class CSVCMsgList_GameEvents < ::Protobuf::Message
      defined_in __FILE__
      class Event_t < ::Protobuf::Message
        defined_in __FILE__
        optional :int32, :tick, 1
        optional :CSVCMsg_GameEvent, :event, 2
      end
      repeated :'CSVCMsgList_GameEvents::event_t', :events, 1
    end
    class CSVCMsg_UserMessage < ::Protobuf::Message
      defined_in __FILE__
      optional :int32, :msg_type, 1
      optional :bytes, :msg_data, 2
    end
    class CSVCMsgList_UserMessages < ::Protobuf::Message
      defined_in __FILE__
      class Usermsg_t < ::Protobuf::Message
        defined_in __FILE__
        optional :int32, :tick, 1
        optional :CSVCMsg_UserMessage, :msg, 2
      end
      repeated :'CSVCMsgList_UserMessages::usermsg_t', :usermsgs, 1
    end
  end
end